<div id="parent-container" class="container-fluid">
  <div class="row">
    <div class="col-md-6" id="map"></div>
    <div class="col-md-6">
      <div class="row">

        <div class="row" id = "mood-selectors">
          <div class="col-md-5 col-md-offset-1" id = "mood-button">
            <input type="checkbox" name="Exciting" value="Exciting">Exciting
            <input type="checkbox" name="Romantic" value="Romantic">Romantic
            <input type="checkbox" name="Relaxing" value="Relaxing">Relaxing
            <input type="checkbox" name="Rewarding" value="Rewarding">Rewarding
            <input type="checkbox" name="Stimulating" value="Stimulating">Stimulating
          </div>
        </div>

        <div class = "row">
          <div id="container-grid">
            <ul id="chill-spot-list">
              <% spots = @current_city.spots.all.order(num_votes: :desc) %>
              <% spots.each do |spot| %>
                <% if spot.title %>
                  <li class="chill-spot" data-spot-id="<%= spot.id %>">
                    <h3><%= spot.title %></h3>
                    <p>
                      <%= spot.description %>

                        <span class="label label-default"><%= spot.vibes[0].label if spot.vibes[0] %></span>
                        <span class="label label-default"><%= spot.vibes[1].label if spot.vibes[1] %></span>
                        <span class="label label-default"><%= spot.vibes[2].label if spot.vibes[2] %></span>
                        <br>

                        <img id = "chill-spot-img" alt="No image" height="32" src="images/<%= spot.id %>_spot_image.jpg"/>

                      <div class="wrap">
                        <div class="vote up">
                          <form action="<%=@current_city.name %>/<%= @current_category.name%>/upvote/spot/<%= spot.id %>" method="post">
                            <button type="submit">
                              <i class="fa fa-angle-up"></i>
                            </button>
                          </form>
                        </div>
                        <div class="stat">
                          <span class="score"><%=spot.num_votes || 0%>
                          </span>
                        </div>
                        <div class="vote down">
                          <form action="<%=@current_city.name %>/<%= @current_category.name%>/downvote/spot/<%= spot.id %>" method="post">
                            <button type="submit">
                              <i class="fa fa-angle-down"></i>
                            </button>
                          </form>
                        </div>
                      </p>
                    </li>
                  <% end %>
                <% end %>
              </ul>
            </div>
          </div>
        </div>
    </div>
  </div>
</div>

<script>
$(function(){
  $(".increment").click(function(){
    var count = parseInt($("~ .count", this).text());

    if($(this).hasClass("up")) {
      var count = count + 1;

       $("~ .count", this).text(count);
    } else {
      var count = count - 1;
       $("~ .count", this).text(count);
    }

    $(this).parent().addClass("bump");

    setTimeout(function(){
      $(this).parent().removeClass("bump");
    }, 400);
  });
});
</script>

<script>

    var filters = {};
    var gMarkers = [];

    var getData = function() {
      $.ajax({
        url:'/city_data',
        data: filters,
        success: function(data) {
          all_data = JSON.parse(data)
          city = all_data.city
          category = all_data.category
          spots = all_data.spots
          var city_lat = parseFloat(city.latitude)
          var city_lon = parseFloat(city.longitude)*(-1)
          var mapDiv = document.getElementById('map');
          window.map = new google.maps.Map(mapDiv, {
            center: {lat: city_lat, lng: city_lon},
            zoom: 10
          });
          for (var i = 0; i < spots.length; i++){
            var myLatLng = {lat: parseFloat(spots[i].latitude), lng: parseFloat(spots[i].longitude)}
            var marker = new google.maps.Marker({
               position: myLatLng,
               map: window.map,
              label: (spots[i].id).toString()
             });
            gMarkers.push(marker);
          };
        }
      });
    }

    var getSpotsInfo = function() {
      $.ajax({
        url: '/filtered_spots',
        data: filters,
        success: renderSpots,
        dataType: 'JSON'
      })
    }

    var renderSpots = function(spots) {
      for (var j = 0; j < gMarkers.length; j++) {
        gMarkers[j].setMap(null);
      }
      gMarkers = [];
      for (var i = 0; i < spots.length; i++){
        var myLatLng = {lat: parseFloat(spots[i].latitude), lng: parseFloat(spots[i].longitude)}
        var marker = new google.maps.Marker({
           position: myLatLng,
           map: window.map,
           label: (spots[i].id).toString()
         });
        gMarkers.push(marker);
      };
      displaySpots(spots);
    }

    var displaySpots = function(spots) {
      var spot_ids = [];
      for (var i = 0; i<spots.length; i++){
        spot_ids.push(spots[i].id);
      };
      debugger
      $(".chill-spot").each(function(i, obj){
        var id = $(this).data('spot-id');
        if (spot_ids.indexOf(id) === -1){
          $(this).hide();
        }
        else{
          $(this).show();
        }
      });
    }

    $(':checkbox').change(function() {
      // Returns an array of selected checkbox values
      filters['options'] = $('#mood-button').find('input:checked').map(function(index, object){return object.name}).toArray();
      getSpotsInfo();
    })

    function initMap() {
      getData()
    }
   //
  //   $(".vote").click(function(){
  //     debugger
  //      var count = parseInt($("~ .score", this).text());
   //
  //      if($(this).hasClass("up")) {
  //        var score = score + 1;
   //
  //         $("~ .score", this).text(count);
  //      } else {
  //        var count = count - 1;
  //         $("~ .score", this).text(count);
  //      }
  //  }


</script>


<script src="https://maps.googleapis.com/maps/api/js?callback=initMap" async defer></script>
